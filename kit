#!/bin/bash

##
##  tidy tools collection for general unix system.
##  
##  Author: Kim Leo <kenpusney@gmail.com>
##  http://github.com/kenpusney
##

##
## Initialization scripts
##

curdir="`pwd`"
basedir="/usr/lib/kit"

[ -d ~/.kit ] || mkdir ~/.kit
cd ~/.kit
workdir="~/.kit"
[ -d configs ] || mkdir configs
[ -f configs/konf.lst ] || touch configs/konf.lst

[ -d plugins ] || mkdir plugins
[ -d lib ] || mkdir lib
error() {
    printf "$1\n\n" 
    printf "See \`kit --help\` for more information.\n"
    exit 1;
}

##
## kit_init : init `kit` program.
## @usage : kit_init
##
kit_init(){
    fetch_packages "lib" "net" "string"
    fetch_packages "plugins" "hello" "conf"
}

gh_raw(){
    if [ -e github.cfg ] 
    then
        user=`sed -n "s/user=\\([^:]*\\)/\\1/p" github.cfg`
        repo=`sed -n "s/repo=\\([^:]*\\)/\\1/p" github.cfg`
        branch=`sed -n "s/branch=\\([^:]*\\)/\\1/p" github.cfg`
    elif [ $# -eq 3 ]
    then
        user="$1"
        repo="$2"
        branch="$3"
    else
        user="kenpusney"
        repo="kit-packages"
        branch="master"
    fi
    echo "https://raw.github.com/$user/$repo/$branch/"
}

##
## fetch_packages : get `lib` of `pack` from internet.
## @usage : fetch_lib <pack> <lib>
##
fetch_packages(){
## TODO : implement
    url=`gh_raw`
    pack="$1" && shift
    for lib in $@
    do
        echo "Fetching \`$lib\` $pack ..."
        curl "$url/$pack/$lib.sh" > "lib/$lib"
        [ $? -ne 0 ] && error "[Error] Fetching error: repo=$url && pack=$pack/$lib"
    done
}

##
## load_lib : load `lib` from lib folder.
## @usage : load_lib <lib>
##
load_lib(){
    [ $# -ne 1 ] && error "[Error] Cannot load lib: \`$@\` ."
    case $1 in
        * ) 
            if [ -f "lib/$1.sh" ]
            then
                . "lib/$1.sh"
            else
                error "[Error] Cannot load lib: file \`$1\` ."
            fi ;;
    esac
}

##
## Main 
##
echo "[`date`]$@" >> .kit_history
case $1 in
    "init" )
        kit_init ;;
    "fetch" )
        shift && fetch_packages $@;;
    #"hello" ) 
    #    load_lib "hello"
    #    hello
    #    ;;
    * ) 
        if [ -e "plugins/$1.sh" ]
        then
            PLG=$1
            shift && . "plugins/$PLG.sh"
        elif [ -e "plugins/$1.pl" ]
        then
            PLG=$1
            shift && perl -Ilib plugins/$PLG.pl $@
        else
            error "[Error] Unknown command \`$1\`."
        fi ;;
esac


