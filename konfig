#!/bin/bash

##
##  Automate configuration script.
##  
##  Author: Kim Leo <kenpusney@gmail.com>
##  http://github.com/kenpusney
##

error() {
    printf "$1\n\n" 
    printf "See \`konfig --help\` for more information.\n"
    exit $2 || 1;
}


##
## eval_rec : Evaluate the script files in `dir` recursively.
## @usage : eval_rec <dir>
##
eval_rec() {
    echo "IN $1 :"
    cd $1
    for file in `ls`
    do
        [ -d $file ] && eval_rec $file
        [ -f $file ] && eval_script $file
    done
    cd ..
}

##
## eval_script : Evaluate the script file.
## @usage : eval_script <script>
##
eval_script() {
    echo "    EXEC $1 ..."
    #By `file` command detected type.
    case `file $1` in
        *"shell script"* ) source $1 ;;
        *"perl script"* ) perl $1 ;;
        *"awk script"* ) awk -f $1 ;;
        *"python script"* ) python $1 ;;
        * )
        #By file extension.
            case $1 in
                *.sh ) bash $1 ;;
                *.pl ) perl $1 ;;
                *.py ) python $1 ;;
                * ) 
                #By she-bang.
                    case `head -1 $1` in
                        *"bash" ) bash $1 ;;
                        *"sh"  ) sh $1 ;;
                        *"perl" ) perl $1 ;;
                        *"python") python $1 ;;
                        * ) error "[Error] Cannot recorgnize the file $1!";
                    esac ;;
            esac ;;
    esac
    
}

##
## konf_exec : Execute a list of files(alone or in `scripts`).
## @usage : konf_exec <file list>
##
konf_exec() {
    for file in $@
    do
        if [ -f $file ]
        then
            eval_script $file
            break
        elif [ -f "scripts/$file" ]
        then 
            eval_script "scripts/$file"
            break
        else
            error "[Error] Unknow Scripts: $file."
        fi
    done
}


##
## conf_cover : Cover configuration files to local.
## @usage : conf_cover <files>
##
conf_cover() {
    for cfg in $@
    do
        case $cfg in
            "all" )
                echo "Covering all configurations, please wait ..."
                sed -n 's/[^:]*:\([^:]*\):\([^:]*\)/cp -rf \2 \1/p' konf.lst | bash 
                echo "done!" ;;
            * ) 
                #exprs="s/$cfg:\\([^:]*\\):\\([^:]*\\)/cp -rf \\2 \\1/p"
                echo "Cover $cfg configuration ..."
                [ -f "`sed -n "s/$cfg:\\([^:]*\\):\\([^:]*\\)/\\2/p" konf.lst`" ] || error "[Error] Cannot found conf: $cfg. "
                sed -n "s/$cfg:\\([^:]*\\):\\([^:]*\\)/cp -rf \\2 \\1/p" konf.lst | bash 
                echo "done!" ;;
        esac
    done
}

##
## conf_insert : Insert a new configuration item into konf.lst.
## @usage : conf_insert <name> <local_path> <file>
##
conf_insert(){
    [ -f $2 ] || error "[Error] Cannot found $2."
    [ -e $3 ] && error "[Error] $3 already exists."
    echo "Copying files ..."
    cp -rf $2 $3
    echo "Appending records ..."
    [ -e $3 ] && echo "$1:$2:$3" >> konf.lst
    [ -e $3 ] && echo "$1 has inserted to conf. "
}

##
## conf_backup : Backup conf from local to konfig.
## @usage : conf_backup <files>
##
conf_backup() {
    for cfg in $@
    do
        case $cfg in
            "all" )
                echo "Backing-up all configurations, please wait ..."
                sed -n 's/[^:]*:\([^:]*\):\([^:]*\)/cp -rf \1 \2/p' konf.lst | bash 
                echo "done!" ;;
            * ) 
                #exprs="s/$cfg:\\([^:]*\\):\\([^:]*\\)/cp -rf \\1 \\2/p"
                echo "Backing-up $cfg configuration ..."
                [ -f "`sed -n "s/$cfg:\\([^:]*\\):\\([^:]*\\)/\\1/p" konf.lst`" ] || error "[Error] Cannot found conf: $cfg, try \`konfig recover\` "
                sed -n "s/$cfg:\\([^:]*\\):\\([^:]*\\)/cp -rf \\1 \\2/p" konf.lst | bash 
                echo "done!" ;;
        esac
    done
}

##
## conf_remove : Remove conf form konfig.
## @usage : conf_remove <files>
##
conf_remove() {
    for cfg in $@
    do
        case $1 in
            "all" )
                echo "Removing all configurations ..."
                cd ..
                rm -rf conf
                mkdir conf
                cd conf
                echo "done!"
                ;;
            * )
                echo "Removing $cfg configuration ..."
                [ -f "`sed -n "s/$cfg:\\([^:]*\\):\\([^:]*\\)/\\2/p" konf.lst`" ] || error "[Error] Cannot found conf: $cfg. "
                sed -n "s/$cfg:\\([^:]*\\):\\([^:]*\\)/rm -rf \\2/p" konf.lst | bash
                echo "`sed /$cfg.*/d konf.lst`" > konf.lst
                echo "done!"
                ;;
        esac
    done
}

##
## list_conf : List configurations.
## @usage : list_conf ["all"]
##
list_conf() {
    awk -F: '{ print $1 }' konf.lst
}


case $1 in
    ## Execution.
    "exec" ) 
        shift
        ## `konfig exec`
        [ $# -eq 0 ] && eval_rec scripts 
        [ $# -gt 0 ] && case $1 in 
                ## `konfig exec all`
                all ) eval_rec scripts ;;
                ## `konfig exec <files>`
                * ) konf_exec $@ ;;
            esac ;;
    ## Cover Configuration files.
    "conf" | "recover" ) 
        shift
        cd conf
        ## `konfig conf`
        [ $# -eq 0 ] && conf_cover "all"
        [ $# -gt 0 ] && case $1 in
                ## `konfig conf all`
                "all" )  
                    conf_cover "all" ;;
                ## `konfig conf <conf>`
                * ) conf_cover $@ ;;
            esac
        cd ..
        ;;
    ## Insertion.
    "insert" | "add" ) 
        shift
        cd conf
        ## `konfig insert <conf> <local> <file>`
        [ $# -ne 3 ] && error "[Error] Wrong number of arguments: 3 needed."
        conf_insert $@ 
        cd .. ;;
    ## Backup.
    "backup" )  
        shift
        cd conf
        [ $# -eq 0 ] && conf_backup "all"
        [ $# -gt 0 ] && case $1 in 
                "all" )   conf_backup "all" ;;
                * )
                    conf_backup $@ ;;
            esac
        cd ..
        ;;
    ## Remove.
    "remove" | "rm" )
        shift
        cd conf
        ## `konfig remove <conf>`
        [ $# -lt 1 ] && error "[Error] Wrong number of arguments: must more than 0."
        conf_remove $@
        cd .. ;;
    ## Clear(Remove all).
    "clear" | "clr" )
        shift
        cd conf
        conf_remove "all"
        cd ..
        ;;
    "list" | "ls" ) 
        shift
        cd conf
        list_conf
        cd ..
        ;;
    * ) error "[Error] Unknown command." ;;
esac


